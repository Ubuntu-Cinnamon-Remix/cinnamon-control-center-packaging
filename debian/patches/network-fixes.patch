Author:  =?UTF-8?q?Bj=C3=B6rn=20Esser?= <besser82@fedoraproject.org>
Date: Sat, 18 Nov 2017 10:40:12 +0100
Subject: [PATCH] network: Update with backported bugfixes
 This rebases the network panel to Gnome 3.24.3 codebase with some
 hand-picked fixes from Gnome 3.26.0 release.  Fixes some compiler
 warnings, run-time warnings and unexpected crashes.

Origin: upstream PR, https://github.com/linuxmint/cinnamon-control-center/pull/189
Last-Update: 2017-11-26
---
 panels/network/Makefile.am                         |   2 -
 panels/network/cc-network-panel.c                  | 248 +++++++-----------
 panels/network/connection-editor/Makefile.am       |   2 +
 .../network/connection-editor/ce-page-ethernet.c   |  10 +
 .../network/connection-editor/ce-page-security.c   |  14 ++
 .../network/connection-editor/ce-page-security.h   |   2 +
 panels/network/connection-editor/ce-page-vpn.c     |  17 +-
 panels/network/connection-editor/ethernet-page.ui  |  30 +++
 .../network/connection-editor/firewall-helpers.c   | 125 +++++++++
 .../network/connection-editor/firewall-helpers.h   |  33 +++
 .../connection-editor/net-connection-editor.c      |   1 -
 panels/network/connection-editor/security-page.ui  |  32 +++
 panels/network/connection-editor/vpn-page.ui       |  40 +++
 panels/network/net-device-wifi.c                   |  44 ++--
 panels/network/net-device.c                        |   3 +-
 panels/network/net-object.h                        |   2 +
 panels/network/net-vpn.c                           |   4 +
 panels/network/network-dialogs.c                   |  29 ---
 panels/network/network.ui                          |   4 -
 panels/network/panel-common.c                      |  20 +-
 panels/network/panel-common.h                      |   2 +-
 .../network/wireless-security/eap-method-fast.ui   |   4 +-
 panels/network/wireless-security/eap-method-leap.c |  14 +-
 .../network/wireless-security/eap-method-leap.ui   |   2 +-
 .../network/wireless-security/eap-method-peap.ui   |   4 +-
 .../network/wireless-security/eap-method-simple.c  |  40 +--
 .../network/wireless-security/eap-method-simple.h  |   1 -
 .../network/wireless-security/eap-method-simple.ui |   2 +-
 panels/network/wireless-security/eap-method-tls.c  |   2 +-
 panels/network/wireless-security/eap-method-tls.ui |   2 +-
 panels/network/wireless-security/eap-method-ttls.c |  26 +-
 .../network/wireless-security/eap-method-ttls.ui   |   4 +-
 panels/network/wireless-security/eap-method.c      | 176 ++-----------
 panels/network/wireless-security/eap-method.h      |   4 +
 panels/network/wireless-security/helpers.h         |   3 +
 .../nm-connection-editor-to-network-panel.patch    | 278 ++++++++++++++++++++-
 panels/network/wireless-security/nm-default.h      |  19 +-
 .../network/wireless-security/wireless-security.c  |   6 +-
 .../network/wireless-security/wireless-security.h  |   1 +
 panels/network/wireless-security/ws-dynamic-wep.ui |   4 +-
 panels/network/wireless-security/ws-leap.ui        |   2 +-
 panels/network/wireless-security/ws-wep-key.ui     |   8 +-
 panels/network/wireless-security/ws-wpa-eap.ui     |   4 +-
 panels/network/wireless-security/ws-wpa-psk.ui     |   2 +-
 44 files changed, 805 insertions(+), 467 deletions(-)

--- a/panels/network/Makefile.am
+++ b/panels/network/Makefile.am
@@ -47,9 +47,7 @@
 	net-device-mobile.h
 NETWORK_PANEL_CFLAGS += -DBUILD_MODEM
 AM_CPPFLAGS += $(MODEM_MANAGER_CFLAGS)
-endif
 
-if BUILD_MODEM
 libnetwork_la_LIBADD = $(PANEL_LIBS) $(NETWORK_PANEL_LIBS) $(NETWORK_MANAGER_LIBS) $(MODEM_MANAGER_LIBS) $(builddir)/connection-editor/libconnection-editor.la
 else
 libnetwork_la_LIBADD = $(PANEL_LIBS) $(NETWORK_PANEL_LIBS) $(NETWORK_MANAGER_LIBS) $(builddir)/connection-editor/libconnection-editor.la
--- a/panels/network/cc-network-panel.c
+++ b/panels/network/cc-network-panel.c
@@ -76,11 +76,6 @@
 #endif
         gboolean          updating_device;
 
-        /* Killswitch stuff */
-        GDBusProxy       *rfkill_proxy;
-        GtkWidget        *kill_switch_header;
-        GtkSwitch        *rfkill_switch;
-
         /* wireless dialog stuff */
         CmdlineOperation  arg_operation;
         gchar            *arg_device;
@@ -90,8 +85,6 @@
 
 enum {
         PANEL_DEVICES_COLUMN_ICON,
-        PANEL_DEVICES_COLUMN_TITLE,
-        PANEL_DEVICES_COLUMN_SORT,
         PANEL_DEVICES_COLUMN_OBJECT,
         PANEL_DEVICES_COLUMN_LAST
 };
@@ -169,7 +162,8 @@
         count = g_variant_iter_init (&iter, array);
         strv = g_ptr_array_sized_new (count + 1);
         while (g_variant_iter_next (&iter, "v", &v)) {
-                g_ptr_array_add (strv, (gpointer *)g_variant_get_string (v, NULL));
+                if (g_variant_is_of_type (v, G_VARIANT_TYPE_STRING))
+                        g_ptr_array_add (strv, (gpointer *)g_variant_get_string (v, NULL));
                 g_variant_unref (v);
         }
         g_ptr_array_add (strv, NULL); /* NULL-terminate the strv data array */
@@ -232,12 +226,9 @@
                 g_cancellable_cancel (priv->cancellable);
 
         g_clear_object (&priv->cancellable);
-        g_clear_object (&priv->rfkill_proxy);
         g_clear_object (&priv->builder);
         g_clear_object (&priv->client);
         g_clear_object (&priv->modem_manager);
-        g_clear_object (&priv->kill_switch_header);
-        priv->rfkill_switch = NULL;
 
         G_OBJECT_CLASS (cc_network_panel_parent_class)->dispose (object);
 }
@@ -255,132 +246,7 @@
 static const char *
 cc_network_panel_get_help_uri (CcPanel *panel)
 {
-	return "help:cinnamon-help/net";
-}
-
-static void
-cc_network_panel_notify_enable_active_cb (GtkSwitch *sw,
-                                          GParamSpec *pspec,
-                                          CcNetworkPanel *panel)
-{
-        CcNetworkPanelPrivate *priv = panel->priv;
-	gboolean enable;
-	enable = gtk_switch_get_active (sw);
-        g_dbus_proxy_call (priv->rfkill_proxy,
-                           "org.freedesktop.DBus.Properties.Set",
-                           g_variant_new_parsed ("('org.gnome.SettingsDaemon.Rfkill',"
-                                                 "'AirplaneMode', %v)",
-                                                 g_variant_new_boolean (enable)),
-                           G_DBUS_CALL_FLAGS_NONE,
-                           -1,
-                           priv->cancellable,
-                           NULL, NULL);
-}
-
-static void
-sync_airplane_mode_switch (CcNetworkPanel *panel)
-{
-        GVariant *result;
-        gboolean enabled, should_show;
-        gboolean hw_enabled;
-
-        result = g_dbus_proxy_get_cached_property (panel->priv->rfkill_proxy, "HasAirplaneMode");
-        enabled = g_variant_get_boolean (result);
-
-        result = g_dbus_proxy_get_cached_property (panel->priv->rfkill_proxy, "ShouldShowAirplaneMode");
-        should_show = g_variant_get_boolean (result);
-
-        gtk_widget_set_visible (GTK_WIDGET (panel->priv->kill_switch_header), enabled && should_show);
-        if (!enabled || !should_show)
-                return;
-
-        result = g_dbus_proxy_get_cached_property (panel->priv->rfkill_proxy, "AirplaneMode");
-        enabled = g_variant_get_boolean (result);
-
-        result = g_dbus_proxy_get_cached_property (panel->priv->rfkill_proxy, "HardwareAirplaneMode");
-        hw_enabled = !!g_variant_get_boolean (result);
-
-	enabled |= hw_enabled;
-
-	if (enabled != gtk_switch_get_active (panel->priv->rfkill_switch)) {
-		g_signal_handlers_block_by_func (panel->priv->rfkill_switch,
-						 cc_network_panel_notify_enable_active_cb,
-						 panel);
-		gtk_switch_set_active (panel->priv->rfkill_switch, enabled);
-		g_signal_handlers_unblock_by_func (panel->priv->rfkill_switch,
-						 cc_network_panel_notify_enable_active_cb,
-						 panel);
-	}
-
-	gtk_widget_set_sensitive (GTK_WIDGET (panel->priv->rfkill_switch), !hw_enabled);
-}
-
-static void
-on_property_change (GDBusProxy *proxy,
-                    GVariant   *changed_properties,
-                    GVariant   *invalidated_properties,
-                    gpointer    user_data)
-{
-        sync_airplane_mode_switch (CC_NETWORK_PANEL (user_data));
-}
-
-static void
-got_rfkill_proxy_cb (GObject *source_object, GAsyncResult *res, gpointer user_data)
-{
-        GError *error = NULL;
-        CcNetworkPanel *panel = CC_NETWORK_PANEL (user_data);
-
-        panel->priv->rfkill_proxy = g_dbus_proxy_new_for_bus_finish (res, &error);
-        if (panel->priv->rfkill_proxy == NULL) {
-                g_printerr ("Error creating rfkill proxy: %s\n", error->message);
-                g_error_free (error);
-                return;
-        }
-
-        g_signal_connect (panel->priv->rfkill_proxy, "g-properties-changed",
-                          G_CALLBACK (on_property_change), panel);
-        sync_airplane_mode_switch (panel);
-}
-
-static void
-cc_network_panel_constructed (GObject *object)
-{
-        CcNetworkPanel *panel = CC_NETWORK_PANEL (object);
-        GtkWidget *box;
-        GtkWidget *label;
-        GtkWidget *widget;
-
-        G_OBJECT_CLASS (cc_network_panel_parent_class)->constructed (object);
-
-        /* add kill switch widgets  */
-        box = gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 3);
-        /* TRANSLATORS: this is to disable the radio hardware in the
-         * network panel */
-        label = gtk_label_new_with_mnemonic (_("Air_plane Mode"));
-        gtk_box_pack_start (GTK_BOX (box), label, FALSE, FALSE, 0);
-        gtk_widget_set_visible (label, TRUE);
-        widget = gtk_switch_new ();
-        gtk_widget_set_valign (widget, GTK_ALIGN_CENTER);
-        gtk_label_set_mnemonic_widget (GTK_LABEL (label), widget);
-        gtk_box_pack_start (GTK_BOX (box), widget, FALSE, FALSE, 4);
-        gtk_widget_show_all (box);
-        panel->priv->rfkill_switch = GTK_SWITCH (widget);
-        //cc_shell_embed_widget_in_header (cc_panel_get_shell (CC_PANEL (panel)), box);
-        panel->priv->kill_switch_header = g_object_ref (box);
-
-        g_dbus_proxy_new_for_bus (G_BUS_TYPE_SESSION,
-                                  G_DBUS_PROXY_FLAGS_NONE,
-                                  NULL,
-                                  "org.gnome.SettingsDaemon.Rfkill",
-                                  "/org/cinnamon/SettingsDaemon/Rfkill",
-                                  "org.gnome.SettingsDaemon.Rfkill",
-                                  panel->priv->cancellable,
-                                  got_rfkill_proxy_cb,
-                                  panel);
-
-        g_signal_connect (panel->priv->rfkill_switch, "notify::active",
-                          G_CALLBACK (cc_network_panel_notify_enable_active_cb),
-                          panel);
+	return "help:gnome-help/net";
 }
 
 static void
@@ -397,7 +263,6 @@
         object_class->set_property = cc_network_panel_set_property;
         object_class->dispose = cc_network_panel_dispose;
         object_class->finalize = cc_network_panel_finalize;
-        object_class->constructed = cc_network_panel_constructed;
 
         //FIXME: Causing warnings
         //g_object_class_override_property (object_class, PROP_PARAMETERS, "parameters");
@@ -511,6 +376,64 @@
         return devices;
 }
 
+static gint
+panel_net_object_get_sort_category (NetObject *net_object)
+{
+        if (NET_IS_DEVICE (net_object)) {
+                return panel_device_get_sort_category (net_device_get_nm_device (NET_DEVICE (net_object)));
+        } else if (NET_IS_PROXY (net_object)) {
+                return 9;
+        } else if (NET_IS_VPN (net_object)) {
+                return 5;
+        }
+
+        g_assert_not_reached ();
+}
+
+static gint
+panel_net_object_sort_func (GtkTreeModel *model, GtkTreeIter *a,
+                            GtkTreeIter *b, void *data)
+{
+        g_autoptr(NetObject) obj_a = NULL;
+        g_autoptr(NetObject) obj_b = NULL;
+        gint cat_a, cat_b;
+
+        gtk_tree_model_get (model, a,
+                            PANEL_DEVICES_COLUMN_OBJECT, &obj_a,
+                            -1);
+        gtk_tree_model_get (model, b,
+                            PANEL_DEVICES_COLUMN_OBJECT, &obj_b,
+                            -1);
+
+        cat_a = panel_net_object_get_sort_category (obj_a);
+        cat_b = panel_net_object_get_sort_category (obj_b);
+
+        if (cat_a != cat_b)
+                return cat_a - cat_b;
+
+        return g_utf8_collate (net_object_get_title (obj_a), net_object_get_title (obj_b));
+}
+
+static void
+panel_net_object_notify_title_cb (NetObject *net_object, GParamSpec *pspec, CcNetworkPanel *panel)
+{
+        GtkTreeIter iter;
+        GtkListStore *liststore;
+
+        if (!find_in_model_by_id (panel, net_object_get_id (net_object), &iter))
+                return;
+
+        liststore = GTK_LIST_STORE (gtk_builder_get_object (panel->priv->builder,
+                                                            "liststore_devices"));
+
+        /* gtk_tree_model_row_changed would not cause the list store to resort.
+         * Instead set the object column to the current value.
+         * See https://bugzilla.gnome.org/show_bug.cgi?id=782737 */
+        gtk_list_store_set (liststore, &iter,
+                            PANEL_DEVICES_COLUMN_OBJECT, net_object,
+                           -1);
+}
+
 static void
 panel_refresh_device_titles (CcNetworkPanel *panel)
 {
@@ -708,19 +631,12 @@
         if (find_in_model_by_id (panel, udi, NULL) != NULL)
                 goto out;
 
-        /* Don't add the libvirtd bridge to the UI */
-        if (g_strrstr (udi, "/virbr0") != NULL)
-                goto out;
-        /* Don't add VPN devices either */
-        if (g_strrstr (udi, "/tun0") != NULL)
-                goto out;
-
         type = nm_device_get_device_type (device);
 
         g_debug ("device %s type %i path %s",
                  udi, type, nm_object_get_path (NM_OBJECT (device)));
 
-        /* map the NMDeviceType to the GType */
+        /* map the NMDeviceType to the GType, or ignore */
         switch (type) {
         case NM_DEVICE_TYPE_ETHERNET:
                 device_g_type = NET_TYPE_DEVICE_ETHERNET;
@@ -731,6 +647,16 @@
         case NM_DEVICE_TYPE_WIFI:
                 device_g_type = NET_TYPE_DEVICE_WIFI;
                 break;
+        /* not going to set up a cluster in GNOME */
+        case NM_DEVICE_TYPE_VETH:
+        /* enterprise features */
+        case NM_DEVICE_TYPE_BOND:
+        case NM_DEVICE_TYPE_TEAM:
+        /* Don't need the libvirtd bridge */
+        case NM_DEVICE_TYPE_BRIDGE:
+        /* Don't add VPN devices */
+        case NM_DEVICE_TYPE_TUN:
+                goto out;
         default:
                 device_g_type = NET_TYPE_DEVICE_SIMPLE;
                 break;
@@ -790,9 +716,11 @@
         gtk_list_store_set (liststore_devices,
                             &iter,
                             PANEL_DEVICES_COLUMN_ICON, panel_device_to_icon_name (device, TRUE),
-                            PANEL_DEVICES_COLUMN_SORT, panel_device_to_sortable_string (device),
                             PANEL_DEVICES_COLUMN_OBJECT, net_device,
                             -1);
+        g_signal_connect (net_device, "notify::title",
+                          G_CALLBACK (panel_net_object_notify_title_cb), panel);
+
         g_object_unref (net_device);
         g_signal_connect (device, "state-changed",
                           G_CALLBACK (state_changed_cb), panel);
@@ -884,11 +812,14 @@
                                                  renderer,
                                                  get_object_title,
                                                  NULL, NULL);
-        gtk_tree_view_column_set_sort_column_id (column, PANEL_DEVICES_COLUMN_SORT);
+        gtk_tree_view_column_set_sort_column_id (column, PANEL_DEVICES_COLUMN_OBJECT);
         liststore_devices = GTK_LIST_STORE (gtk_builder_get_object (priv->builder,
                                             "liststore_devices"));
+        gtk_tree_sortable_set_sort_func (GTK_TREE_SORTABLE (liststore_devices),
+                                         PANEL_DEVICES_COLUMN_OBJECT,
+                                         panel_net_object_sort_func, NULL, NULL);
         gtk_tree_sortable_set_sort_column_id (GTK_TREE_SORTABLE (liststore_devices),
-                                              PANEL_DEVICES_COLUMN_SORT,
+                                              PANEL_DEVICES_COLUMN_OBJECT,
                                               GTK_SORT_ASCENDING);
         gtk_tree_view_append_column (treeview, column);
         gtk_tree_view_column_set_expand (column, TRUE);
@@ -967,9 +898,12 @@
         gtk_list_store_set (liststore_devices,
                             &iter,
                             PANEL_DEVICES_COLUMN_ICON, "preferences-system-network-symbolic",
-                            PANEL_DEVICES_COLUMN_SORT, "9",
                             PANEL_DEVICES_COLUMN_OBJECT, proxy,
                             -1);
+
+        /* NOTE: No connect to notify::title here as it is guaranteed to not
+         *       be changed by anyone.*/
+
         g_object_unref (proxy);
 }
 
@@ -1145,9 +1079,11 @@
         gtk_list_store_set (liststore_devices,
                             &iter,
                             PANEL_DEVICES_COLUMN_ICON, "network-vpn-symbolic",
-                            PANEL_DEVICES_COLUMN_SORT, "5",
                             PANEL_DEVICES_COLUMN_OBJECT, net_vpn,
                             -1);
+        g_signal_connect (net_vpn, "notify::title",
+                          G_CALLBACK (panel_net_object_notify_title_cb), panel);
+
         g_free (title);
         g_object_unref (net_vpn);
 }
@@ -1335,6 +1271,7 @@
         g_signal_connect (panel->priv->client, "device-removed",
                           G_CALLBACK (device_removed_cb), panel);
 
+#ifdef BUILD_MODEM
         /* Setup ModemManager client */
         system_bus = g_bus_get_sync (G_BUS_TYPE_SYSTEM, NULL, &error);
         if (system_bus == NULL) {
@@ -1353,6 +1290,9 @@
                 }
                 g_object_unref (system_bus);
         }
+#else
+        panel->priv->modem_manager = NULL;
+#endif
 
         widget = GTK_WIDGET (gtk_builder_get_object (panel->priv->builder,
                                                      "add_toolbutton"));
@@ -1390,8 +1330,10 @@
 
         /* Cold-plug existing connections */
         connections = nm_client_get_connections (panel->priv->client);
-        for (i = 0; i < connections->len; i++)
-                add_connection (panel, connections->pdata[i]);
+        if (connections) {
+                for (i = 0; i < connections->len; i++)
+                        add_connection (panel, connections->pdata[i]);
+        }
 
         g_debug ("Calling handle_argv() after cold-plugging connections");
         handle_argv (panel);
--- a/panels/network/connection-editor/Makefile.am
+++ b/panels/network/connection-editor/Makefile.am
@@ -30,6 +30,8 @@
 	ce-page-vpn.c				\
 	vpn-helpers.h				\
 	vpn-helpers.c				\
+	firewall-helpers.h			\
+	firewall-helpers.c			\
 	ui-helpers.h				\
 	ui-helpers.c
 
--- a/panels/network/connection-editor/ce-page-ethernet.c
+++ b/panels/network/connection-editor/ce-page-ethernet.c
@@ -28,6 +28,7 @@
 #include <NetworkManager.h>
 
 
+#include "firewall-helpers.h"
 #include "ce-page-ethernet.h"
 #include "ui-helpers.h"
 
@@ -65,6 +66,7 @@
         char **mac_list;
         const char *s_mac_str;
         GtkWidget *widget;
+        GtkWidget *heading;
         const gchar *name;
         const gchar *cloned_mac;
 
@@ -112,6 +114,11 @@
         g_signal_connect (widget, "toggled",
                           G_CALLBACK (all_user_changed), page);
         g_signal_connect_swapped (widget, "toggled", G_CALLBACK (ce_page_changed), page);
+
+        widget = GTK_WIDGET (gtk_builder_get_object (CE_PAGE (page)->builder, "combo_zone"));
+        heading = GTK_WIDGET (gtk_builder_get_object (CE_PAGE (page)->builder, "heading_zone"));
+        firewall_ui_setup (sc, widget, heading, CE_PAGE (page)->cancellable);
+        g_signal_connect_swapped (widget, "changed", G_CALLBACK (ce_page_changed), page);
 }
 
 static void
@@ -140,6 +147,9 @@
                       NM_SETTING_CONNECTION_ID, gtk_entry_get_text (page->name),
                       NULL);
 
+        entry = GTK_WIDGET (gtk_builder_get_object (CE_PAGE (page)->builder, "combo_zone"));
+        firewall_ui_to_setting (page->setting_connection, entry);
+
         g_free (cloned_mac);
         g_free (device_mac);
 }
--- a/panels/network/connection-editor/ce-page-security.c
+++ b/panels/network/connection-editor/ce-page-security.c
@@ -28,6 +28,7 @@
 
 #include "wireless-security.h"
 #include "ce-page-security.h"
+#include "firewall-helpers.h"
 
 G_DEFINE_TYPE (CEPageSecurity, ce_page_security, CE_TYPE_PAGE)
 
@@ -147,6 +148,7 @@
                         gtk_container_remove (GTK_CONTAINER (parent), sec_widget);
 
                 gtk_size_group_add_widget (page->group, page->security_heading);
+                gtk_size_group_add_widget (page->group, page->firewall_heading);
                 wireless_security_add_to_size_group (sec, page->group);
 
                 gtk_container_add (GTK_CONTAINER (vbox), sec_widget);
@@ -203,6 +205,7 @@
         NMConnection *connection = CE_PAGE (page)->connection;
         NMSettingWireless *sw;
         NMSettingWirelessSecurity *sws;
+        NMSettingConnection *sc;
         gboolean is_adhoc = FALSE;
         GtkListStore *sec_model;
         GtkTreeIter iter;
@@ -349,6 +352,13 @@
 
         page->security_combo = combo;
 
+        page->firewall_heading = GTK_WIDGET (gtk_builder_get_object (CE_PAGE (page)->builder, "heading_zone"));
+        page->firewall_combo = GTK_COMBO_BOX (gtk_builder_get_object (CE_PAGE (page)->builder, "combo_zone"));
+
+        sc = nm_connection_get_setting_connection (CE_PAGE (page)->connection);
+        firewall_ui_setup (sc, GTK_WIDGET (page->firewall_combo), page->firewall_heading, CE_PAGE (page)->cancellable);
+        g_signal_connect_swapped (page->firewall_combo, "changed", G_CALLBACK (ce_page_changed), page);
+
         security_combo_changed (combo, page);
         g_signal_connect (combo, "changed",
                           G_CALLBACK (security_combo_changed), page);
@@ -360,6 +370,7 @@
           GError       **error)
 {
         NMSettingWireless *sw;
+        NMSettingConnection *sc;
         WirelessSecurity *sec;
         gboolean valid = FALSE;
         const char *mode;
@@ -402,6 +413,9 @@
                 valid = TRUE;
         }
 
+        sc = nm_connection_get_setting_connection (connection);
+        firewall_ui_to_setting (sc, GTK_WIDGET (CE_PAGE_SECURITY (page)->firewall_combo));
+
         return valid;
 }
 
--- a/panels/network/connection-editor/ce-page-security.h
+++ b/panels/network/connection-editor/ce-page-security.h
@@ -45,6 +45,8 @@
 
         GtkComboBox *security_combo;
         GtkWidget   *security_heading;
+        GtkComboBox *firewall_combo;
+        GtkWidget   *firewall_heading;
         GtkSizeGroup *group;
         gboolean     adhoc;
 };
--- a/panels/network/connection-editor/ce-page-vpn.c
+++ b/panels/network/connection-editor/ce-page-vpn.c
@@ -28,6 +28,7 @@
 
 #include "ce-page-vpn.h"
 #include "vpn-helpers.h"
+#include "firewall-helpers.h"
 
 G_DEFINE_TYPE (CEPageVpn, ce_page_vpn, CE_TYPE_PAGE)
 
@@ -57,14 +58,14 @@
  *      Bar baz [__________]
  */
 static void
-vpn_cinnamon3ify_editor (GtkWidget *widget)
+vpn_cinnamonify_editor (GtkWidget *widget)
 {
         if (GTK_IS_CONTAINER (widget)) {
                 GList *children, *iter;
 
                 children = gtk_container_get_children (GTK_CONTAINER (widget));
                 for (iter = children; iter; iter = iter->next)
-                        vpn_cinnamon3ify_editor (iter->data);
+                        vpn_cinnamonify_editor (iter->data);
                 g_list_free (children);
         } else if (GTK_IS_LABEL (widget)) {
                 const char *text;
@@ -105,7 +106,7 @@
                 page->plugin = NULL;
 		return;
 	}
-        vpn_cinnamon3ify_editor (ui_widget);
+        vpn_cinnamonify_editor (ui_widget);
 
         failure = GTK_WIDGET (gtk_builder_get_object (parent->builder, "failure_label"));
         gtk_widget_destroy (failure);
@@ -121,6 +122,7 @@
 {
         const gchar *name;
         GtkWidget *widget;
+        GtkWidget *heading;
 
         name = nm_setting_connection_get_id (page->setting_connection);
         gtk_entry_set_text (page->name, name);
@@ -132,6 +134,12 @@
                                       nm_setting_connection_get_num_permissions (page->setting_connection) == 0);
         g_signal_connect (widget, "toggled",
                           G_CALLBACK (all_user_changed), page);
+
+        widget = GTK_WIDGET (gtk_builder_get_object (CE_PAGE (page)->builder, "combo_zone"));
+        heading = GTK_WIDGET (gtk_builder_get_object (CE_PAGE (page)->builder, "heading_zone"));
+        firewall_ui_setup (page->setting_connection, widget, heading, CE_PAGE (page)->cancellable);
+        g_signal_connect_swapped (widget, "changed", G_CALLBACK (ce_page_changed), page);
+
 }
 
 static gboolean
@@ -140,10 +148,13 @@
           GError       **error)
 {
         CEPageVpn *self = CE_PAGE_VPN (page);
+        GtkWidget *widget;
 
         g_object_set (self->setting_connection,
                       NM_SETTING_CONNECTION_ID, gtk_entry_get_text (self->name),
                       NULL);
+        widget = GTK_WIDGET (gtk_builder_get_object (CE_PAGE (page)->builder, "combo_zone"));
+        firewall_ui_to_setting (self->setting_connection, widget);
 
         if (!nm_setting_verify (NM_SETTING (self->setting_connection), NULL, error))
                 return FALSE;
--- a/panels/network/connection-editor/ethernet-page.ui
+++ b/panels/network/connection-editor/ethernet-page.ui
@@ -262,6 +262,36 @@
     <child>
       <placeholder/>
     </child>
+    <child>
+      <object class="GtkLabel" id="heading_zone">
+        <property name="visible">True</property>
+        <property name="can_focus">False</property>
+        <property name="xalign">1</property>
+        <property name="label" translatable="yes">Firewall _Zone</property>
+        <property name="use_underline">True</property>
+        <property name="mnemonic_widget">combo_zone</property>
+      </object>
+      <packing>
+        <property name="left_attach">0</property>
+        <property name="top_attach">4</property>
+        <property name="width">1</property>
+        <property name="height">1</property>
+      </packing>
+    </child>
+    <child>
+      <object class="GtkComboBoxText" id="combo_zone">
+        <property name="visible">True</property>
+        <property name="can_focus">False</property>
+        <property name="entry_text_column">0</property>
+        <property name="id_column">1</property>
+      </object>
+      <packing>
+        <property name="left_attach">1</property>
+        <property name="top_attach">4</property>
+        <property name="width">1</property>
+        <property name="height">1</property>
+      </packing>
+    </child>
   </object>
   <object class="GtkSizeGroup" id="sizegroup1">
     <widgets>
--- /dev/null
+++ b/panels/network/connection-editor/firewall-helpers.c
@@ -0,0 +1,125 @@
+/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*-
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * (C) Copyright 2013 Red Hat, Inc.
+ */
+
+#include "config.h"
+
+#include <glib/gi18n.h>
+#include <gio/gio.h>
+
+#include "firewall-helpers.h"
+
+typedef struct {
+        gchar *zone;
+        GtkWidget *combo;
+        GtkWidget *label;
+} GetZonesReplyData;
+
+static void
+get_zones_reply (GObject      *source,
+                 GAsyncResult *res,
+                 gpointer      user_data)
+{
+        GDBusConnection *bus = G_DBUS_CONNECTION (source);
+        GetZonesReplyData *d = user_data;
+        GVariant *ret;
+        GError *error = NULL;
+        const gchar **zones;
+        gint idx;
+        gint i;
+
+        ret = g_dbus_connection_call_finish (bus, res, &error);
+
+        gtk_combo_box_text_append_text (GTK_COMBO_BOX_TEXT (d->combo),
+                                        C_("Firewall zone", "Default"));
+        gtk_widget_set_tooltip_text (d->combo, _("The zone defines the trust level of the connection"));
+
+        idx = 0;
+        if (error) {
+                gtk_widget_hide (d->combo);
+                gtk_widget_hide (d->label);
+                g_error_free (error);
+        }
+        else {
+                gtk_widget_show (d->combo);
+                gtk_widget_show (d->label);
+                g_variant_get (ret, "(^a&s)", &zones);
+
+                for (i = 0; zones[i]; i++) {
+                        gtk_combo_box_text_append_text (GTK_COMBO_BOX_TEXT (d->combo),
+                                                        zones[i]);
+                        if (g_strcmp0 (d->zone, zones[i]) == 0)
+                                idx = i + 1;
+                }
+                if (d->zone && idx == 0) {
+                        gtk_combo_box_text_append_text (GTK_COMBO_BOX_TEXT (d->combo),
+                                                        d->zone);
+                        idx = i + 1;
+                }
+                g_variant_unref (ret);
+        }
+        gtk_combo_box_set_active (GTK_COMBO_BOX (d->combo), idx);
+
+        g_free (d->zone);
+        g_free (d);
+}
+
+void
+firewall_ui_setup (NMSettingConnection *setting,
+                   GtkWidget           *combo,
+                   GtkWidget           *label,
+                   GCancellable        *cancellable)
+{
+        GDBusConnection *bus;
+        GetZonesReplyData *d;
+
+        bus = g_bus_get_sync (G_BUS_TYPE_SYSTEM, NULL, NULL);
+
+        d = g_new0 (GetZonesReplyData, 1);
+        d->zone = g_strdup (nm_setting_connection_get_zone (setting));
+        d->combo = combo;
+        d->label = label;
+
+        g_dbus_connection_call (bus,
+                                "org.fedoraproject.FirewallD1",
+                                "/org/fedoraproject/FirewallD1",
+                                "org.fedoraproject.FirewallD1.zone",
+                                "getZones",
+                                NULL,
+                                NULL,
+                                0,
+                                G_MAXINT,
+                                cancellable,
+                                get_zones_reply, d);
+        g_object_unref (bus);
+}
+
+void
+firewall_ui_to_setting (NMSettingConnection *setting, GtkWidget *combo)
+{
+        gchar *zone;
+
+        zone = gtk_combo_box_text_get_active_text (GTK_COMBO_BOX_TEXT (combo));
+        if (g_strcmp0 (zone, C_("Firewall zone", "Default")) == 0) {
+                g_free (zone);
+                zone = NULL;
+        }
+
+        g_object_set (setting, NM_SETTING_CONNECTION_ZONE, zone, NULL);
+        g_free (zone);
+}
--- /dev/null
+++ b/panels/network/connection-editor/firewall-helpers.h
@@ -0,0 +1,33 @@
+/*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * (C) Copyright 2013 Red Hat, Inc.
+ */
+
+#ifndef _FIREWALL_HELPERS_H_
+#define _FIREWALL_HELPERS_H_
+
+#include <NetworkManager.h>
+#include <gtk/gtk.h>
+
+void firewall_ui_setup      (NMSettingConnection *setting,
+                             GtkWidget           *combo,
+                             GtkWidget           *label,
+                             GCancellable        *cancellable);
+void firewall_ui_to_setting (NMSettingConnection *setting,
+                             GtkWidget           *combo);
+
+
+#endif  /* _FIREWALL_HELPERS_H_ */
--- a/panels/network/connection-editor/net-connection-editor.c
+++ b/panels/network/connection-editor/net-connection-editor.c
@@ -167,7 +167,6 @@
         GtkTreeSelection *selection;
 
         editor->builder = gtk_builder_new ();
-
         gtk_builder_add_from_resource (editor->builder,
                                        "/org/cinnamon/control-center/network/connection-editor.ui",
                                        &error);
--- a/panels/network/connection-editor/security-page.ui
+++ b/panels/network/connection-editor/security-page.ui
@@ -63,6 +63,38 @@
             <property name="height">1</property>
           </packing>
         </child>
+        <child>
+          <object class="GtkLabel" id="heading_zone">
+            <property name="visible">True</property>
+            <property name="can_focus">False</property>
+            <property name="xalign">1</property>
+            <property name="label" translatable="yes">Firewall _Zone</property>
+            <property name="use_underline">True</property>
+            <property name="mnemonic_widget">combo_zone</property>
+          </object>
+          <packing>
+            <property name="left_attach">0</property>
+            <property name="top_attach">2</property>
+            <property name="width">1</property>
+            <property name="height">1</property>
+          </packing>
+        </child>
+        <child>
+          <object class="GtkComboBoxText" id="combo_zone">
+            <property name="visible">True</property>
+            <property name="can_focus">False</property>
+            <property name="hexpand">True</property>
+            <property name="entry_text_column">0</property>
+            <property name="id_column">1</property>
+          </object>
+          <packing>
+            <property name="left_attach">1</property>
+            <property name="top_attach">2</property>
+            <property name="width">1</property>
+            <property name="height">1</property>
+          </packing>
+        </child>
+
       </object>
     </child>
     <child type="tab">
--- a/panels/network/connection-editor/vpn-page.ui
+++ b/panels/network/connection-editor/vpn-page.ui
@@ -51,6 +51,45 @@
       </packing>
     </child>
     <child>
+      <object class="GtkBox" id="box1">
+        <property name="visible">True</property>
+        <property name="can_focus">False</property>
+        <property name="spacing">6</property>
+        <child>
+          <object class="GtkLabel" id="heading_zone">
+            <property name="visible">True</property>
+            <property name="can_focus">False</property>
+            <property name="label" translatable="yes">Firewall _Zone</property>
+            <property name="use_underline">True</property>
+            <property name="mnemonic_widget">combo_zone</property>
+          </object>
+          <packing>
+            <property name="expand">False</property>
+            <property name="fill">True</property>
+            <property name="position">0</property>
+          </packing>
+        </child>
+        <child>
+          <object class="GtkComboBoxText" id="combo_zone">
+            <property name="visible">True</property>
+            <property name="can_focus">False</property>
+            <property name="entry_text_column">0</property>
+            <property name="id_column">1</property>
+          </object>
+          <packing>
+            <property name="expand">True</property>
+            <property name="fill">True</property>
+            <property name="position">1</property>
+          </packing>
+        </child>
+      </object>
+      <packing>
+        <property name="expand">False</property>
+        <property name="fill">True</property>
+        <property name="position">1</property>
+      </packing>
+    </child>
+    <child>
       <object class="GtkCheckButton" id="all_user_check">
         <property name="label" translatable="yes">Make available to other _users</property>
         <property name="visible">True</property>
@@ -86,6 +125,7 @@
   <object class="GtkSizeGroup" id="sizegroup1">
     <widgets>
       <widget name="heading_name"/>
+      <widget name="heading_zone"/>
     </widgets>
   </object>
 </interface>
--- a/panels/network/net-device-wifi.c
+++ b/panels/network/net-device-wifi.c
@@ -326,8 +326,9 @@
         NMSettingWireless *sw;
 
         c = find_connection_for_device (device_wifi, device);
-        if (c == NULL)
-                return NULL;
+        if (c == NULL) {
+                return FALSE;
+        }
 
         sw = nm_connection_get_setting_wireless (c);
         return nm_setting_wireless_get_ssid (sw);
@@ -347,6 +348,7 @@
                 if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED))
                         g_warning ("Could not get secrets: %s", error->message);
                 g_error_free (error);
+                //FIXME ignore cancelled
                 return;
         }
 
@@ -502,6 +504,7 @@
 nm_device_wifi_refresh_ui (NetDeviceWifi *device_wifi)
 {
         const gchar *str;
+        gboolean is_hotspot;
         gchar *str_tmp = NULL;
         gint strength = 0;
         guint speed = 0;
@@ -514,7 +517,8 @@
         NetDeviceWifiPrivate *priv = device_wifi->priv;
         GtkWidget *dialog;
 
-        if (device_is_hotspot (device_wifi)) {
+        is_hotspot = device_is_hotspot (device_wifi);
+        if (is_hotspot) {
                 nm_device_wifi_refresh_hotspot (device_wifi);
                 show_hotspot_ui (device_wifi);
                 return;
@@ -636,11 +640,13 @@
 connect_to_hidden_network (NetDeviceWifi *device_wifi)
 {
         NMClient *client;
-        CcNetworkPanel *panel;
+        GList *windows = gtk_window_list_toplevels ();
+        GtkWidget *toplevel = GTK_WIDGET (windows->data);
 
         client = net_object_get_client (NET_OBJECT (device_wifi));
-        panel = net_object_get_panel (NET_OBJECT (device_wifi));
-        cc_network_panel_connect_to_hidden_network (panel, client);
+        cc_network_panel_connect_to_hidden_network (toplevel, client);
+
+        g_list_free (windows);
 }
 
 static void
@@ -653,13 +659,12 @@
 
         conn = nm_client_add_and_activate_connection_finish (NM_CLIENT (source_object), res, &error);
         if (!conn) {
-                if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED)) {
-                        nm_device_wifi_refresh_ui (user_data);
-                        /* failed to activate */
-                        g_warning ("Failed to add and activate connection '%d': %s",
-                                   error->code,
-                                   error->message);
-                }
+                //FIXME cancelled
+                nm_device_wifi_refresh_ui (user_data);
+                /* failed to activate */
+                g_debug ("Failed to add and activate connection '%d': %s",
+                         error->code,
+                         error->message);
                 g_error_free (error);
                 return;
         }
@@ -673,13 +678,12 @@
         GError *error = NULL;
 
         if (!nm_client_activate_connection_finish (NM_CLIENT (source_object), res, &error)) {
-                if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED)) {
-                        nm_device_wifi_refresh_ui (user_data);
-                        /* failed to activate */
-                        g_debug ("Failed to add and activate connection '%d': %s",
-                                 error->code,
-                                 error->message);
-                }
+                //FIXME cancelled
+                nm_device_wifi_refresh_ui (user_data);
+                /* failed to activate */
+                g_debug ("Failed to add and activate connection '%d': %s",
+                         error->code,
+                         error->message);
                 g_error_free (error);
                 return;
         }
--- a/panels/network/net-device.c
+++ b/panels/network/net-device.c
@@ -268,7 +268,8 @@
                 g_signal_handler_disconnect (priv->nm_device,
                                              priv->changed_id);
         }
-        g_clear_object (&priv->nm_device);
+        if (priv->nm_device != NULL)
+                g_object_unref (priv->nm_device);
 
         G_OBJECT_CLASS (net_device_parent_class)->finalize (object);
 }
--- a/panels/network/net-object.h
+++ b/panels/network/net-object.h
@@ -41,6 +41,8 @@
 typedef struct _NetObject                NetObject;
 typedef struct _NetObjectClass           NetObjectClass;
 
+G_DEFINE_AUTOPTR_CLEANUP_FUNC (NetObject, g_object_unref)
+
 struct _NetObject
 {
          GObject                 parent;
--- a/panels/network/net-vpn.c
+++ b/panels/network/net-vpn.c
@@ -54,7 +54,11 @@
 static void
 connection_vpn_state_changed_cb (NMVpnConnection *connection,
                                  NMVpnConnectionState state,
+#if NM_CHECK_VERSION(1,8,0)
+                                 NMActiveConnectionStateReason reason,
+#else
                                  NMVpnConnectionStateReason reason,
+#endif
                                  NetVpn *vpn)
 {
         net_object_emit_changed (NET_OBJECT (vpn));
--- a/panels/network/network-dialogs.c
+++ b/panels/network/network-dialogs.c
@@ -98,19 +98,6 @@
 }
 
 static void
-nag_dialog_response_cb (GtkDialog *nag_dialog,
-                        gint response,
-                        gpointer user_data)
-{
-	NMAWifiDialog *wireless_dialog = NMA_WIFI_DIALOG (user_data);
-
-	if (response == GTK_RESPONSE_NO) {  /* user opted not to correct the warning */
-		nma_wifi_dialog_set_nag_ignored (wireless_dialog, TRUE);
-		gtk_dialog_response (GTK_DIALOG (wireless_dialog), GTK_RESPONSE_OK);
-	}
-}
-
-static void
 wireless_dialog_response_cb (GtkDialog *foo,
                              gint response,
                              gpointer user_data)
@@ -126,22 +113,6 @@
 	if (response != GTK_RESPONSE_OK)
 		goto done;
 
-	if (!nma_wifi_dialog_get_nag_ignored (dialog)) {
-		GtkWidget *nag_dialog;
-
-		/* Nag the user about certificates or whatever.  Only destroy the dialog
-		 * if no nagging was done.
-		 */
-		nag_dialog = nma_wifi_dialog_nag_user (dialog);
-		if (nag_dialog) {
-			gtk_window_set_transient_for (GTK_WINDOW (nag_dialog), GTK_WINDOW (dialog));
-			g_signal_connect (nag_dialog, "response",
-			                  G_CALLBACK (nag_dialog_response_cb),
-			                  dialog);
-			return;
-		}
-	}
-
 	/* nma_wifi_dialog_get_connection() returns a connection with the
 	 * refcount incremented, so the caller must remember to unref it.
 	 */
--- a/panels/network/network.ui
+++ b/panels/network/network.ui
@@ -21,10 +21,6 @@
     <columns>
       <!-- column-name icon -->
       <column type="gchararray"/>
-      <!-- column-name title -->
-      <column type="gchararray"/>
-      <!-- column-name sort -->
-      <column type="gchararray"/>
       <!-- column-name object -->
       <column type="GObject"/>
     </columns>
--- a/panels/network/panel-common.c
+++ b/panels/network/panel-common.c
@@ -73,38 +73,38 @@
 }
 
 /**
- * panel_device_to_sortable_string:
+ * panel_device_get_sort_category:
  *
  * Try to return order of approximate connection speed.
  * But sort wifi first, since thats the common case.
  **/
-const gchar *
-panel_device_to_sortable_string (NMDevice *device)
+gint
+panel_device_get_sort_category (NMDevice *device)
 {
-        const gchar *value = NULL;
+        gint value = 0;
         NMDeviceModemCapabilities caps;
         switch (nm_device_get_device_type (device)) {
         case NM_DEVICE_TYPE_ETHERNET:
-                value = "2";
+                value = 2;
                 break;
         case NM_DEVICE_TYPE_WIFI:
-                value = "1";
+                value = 1;
                 break;
         case NM_DEVICE_TYPE_MODEM:
                 caps = nm_device_modem_get_current_capabilities (NM_DEVICE_MODEM (device));
                 if ((caps & NM_DEVICE_MODEM_CAPABILITY_GSM_UMTS) ||
                     (caps & NM_DEVICE_MODEM_CAPABILITY_CDMA_EVDO)) {
-                        value = "3";
+                        value = 3;
                 }
                 break;
         case NM_DEVICE_TYPE_BT:
-                value = "4";
+                value = 4;
                 break;
         case NM_DEVICE_TYPE_OLPC_MESH:
-                value = "5";
+                value = 5;
                 break;
         default:
-                value = "6";
+                value = 6;
                 break;
         }
         return value;
--- a/panels/network/panel-common.h
+++ b/panels/network/panel-common.h
@@ -30,7 +30,7 @@
 
 const gchar     *panel_device_to_icon_name                     (NMDevice *device,
                                                                 gboolean  symbolic);
-const gchar     *panel_device_to_sortable_string               (NMDevice *device);
+gint             panel_device_get_sort_category                (NMDevice *device);
 const gchar     *panel_ap_mode_to_localized_string             (NM80211Mode mode);
 const gchar     *panel_vpn_state_to_localized_string           (NMVpnConnectionState type);
 void             panel_set_device_status                       (GtkBuilder *builder,
--- a/panels/network/wireless-security/eap-method-fast.ui
+++ b/panels/network/wireless-security/eap-method-fast.ui
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <interface>
-  <requires lib="gtk+" version="3.4"/>
+  <!-- interface-requires gtk+ 3.0 -->
   <object class="GtkListStore" id="model8">
     <columns>
       <!-- column-name gchararray -->
@@ -8,7 +8,7 @@
     </columns>
     <data>
       <row>
-        <col id="0"> </col>
+        <col id="0" translatable="yes"> </col>
       </row>
     </data>
   </object>
--- a/panels/network/wireless-security/eap-method-leap.c
+++ b/panels/network/wireless-security/eap-method-leap.c
@@ -176,11 +176,15 @@
 
 	widget = GTK_WIDGET (gtk_builder_get_object (parent->builder, "eap_leap_notebook"));
 	g_assert (widget);
-	g_signal_handlers_disconnect_by_data (widget, method);
 
-	g_signal_handlers_disconnect_by_data (method->username_entry, method->ws_parent);
-	g_signal_handlers_disconnect_by_data (method->password_entry, method->ws_parent);
-	g_signal_handlers_disconnect_by_data (method->show_password, method);
+	g_signal_handlers_disconnect_by_func (G_OBJECT (widget),
+	                                      (GCallback) widgets_realized,
+	                                      method);
+	g_signal_handlers_disconnect_by_func (G_OBJECT (widget),
+	                                      (GCallback) widgets_unrealized,
+	                                      method);
+
+	wireless_security_unref (method->ws_parent);
 }
 
 EAPMethodLEAP *
@@ -209,7 +213,7 @@
 	parent->password_flags_name = NM_SETTING_802_1X_PASSWORD;
 	method = (EAPMethodLEAP *) parent;
 	method->editing_connection = secrets_only ? FALSE : TRUE;
-	method->ws_parent = ws_parent;
+	method->ws_parent = wireless_security_ref (ws_parent);
 
 	widget = GTK_WIDGET (gtk_builder_get_object (parent->builder, "eap_leap_notebook"));
 	g_assert (widget);
--- a/panels/network/wireless-security/eap-method-leap.ui
+++ b/panels/network/wireless-security/eap-method-leap.ui
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <interface>
-  <requires lib="gtk+" version="3.4"/>
+  <!-- interface-requires gtk+ 3.0 -->
   <object class="GtkNotebook" id="eap_leap_notebook">
     <property name="visible">True</property>
     <property name="can_focus">False</property>
--- a/panels/network/wireless-security/eap-method-peap.ui
+++ b/panels/network/wireless-security/eap-method-peap.ui
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <interface>
-  <requires lib="gtk+" version="3.4"/>
+  <!-- interface-requires gtk+ 3.0 -->
   <object class="GtkListStore" id="model8">
     <columns>
       <!-- column-name gchararray -->
@@ -8,7 +8,7 @@
     </columns>
     <data>
       <row>
-        <col id="0"> </col>
+        <col id="0" translatable="yes"> </col>
       </row>
     </data>
   </object>
--- a/panels/network/wireless-security/eap-method-simple.c
+++ b/panels/network/wireless-security/eap-method-simple.c
@@ -115,14 +115,13 @@
 
 /* Indexed by EAP_METHOD_SIMPLE_TYPE_* */
 static const EapType eap_table[EAP_METHOD_SIMPLE_TYPE_LAST] = {
-	[EAP_METHOD_SIMPLE_TYPE_PAP]             = { "pap",      FALSE },
-	[EAP_METHOD_SIMPLE_TYPE_MSCHAP]          = { "mschap",   FALSE },
-	[EAP_METHOD_SIMPLE_TYPE_MSCHAP_V2]       = { "mschapv2", TRUE  },
-	[EAP_METHOD_SIMPLE_TYPE_PLAIN_MSCHAP_V2] = { "mschapv2", FALSE },
-	[EAP_METHOD_SIMPLE_TYPE_MD5]             = { "md5",      TRUE  },
-	[EAP_METHOD_SIMPLE_TYPE_PWD]             = { "pwd",      TRUE  },
-	[EAP_METHOD_SIMPLE_TYPE_CHAP]            = { "chap",     FALSE },
-	[EAP_METHOD_SIMPLE_TYPE_GTC]             = { "gtc",      TRUE  },
+	[EAP_METHOD_SIMPLE_TYPE_PAP]       = { "pap",      FALSE },
+	[EAP_METHOD_SIMPLE_TYPE_MSCHAP]    = { "mschap",   FALSE },
+	[EAP_METHOD_SIMPLE_TYPE_MSCHAP_V2] = { "mschapv2", TRUE  },
+	[EAP_METHOD_SIMPLE_TYPE_MD5]       = { "md5",      TRUE  },
+	[EAP_METHOD_SIMPLE_TYPE_PWD]       = { "pwd",      TRUE  },
+	[EAP_METHOD_SIMPLE_TYPE_CHAP]      = { "chap",     FALSE },
+	[EAP_METHOD_SIMPLE_TYPE_GTC]       = { "gtc",      TRUE  },
 };
 
 static void
@@ -269,14 +268,25 @@
 
 	widget = GTK_WIDGET (gtk_builder_get_object (parent->builder, "eap_simple_notebook"));
 	g_assert (widget);
-	g_signal_handlers_disconnect_by_data (widget, method);
 
-	g_signal_handlers_disconnect_by_data (method->username_entry, method->ws_parent);
-	g_signal_handlers_disconnect_by_data (method->password_entry, method->ws_parent);
-	g_signal_handlers_disconnect_by_data (method->password_entry, method);
-	g_signal_handlers_disconnect_by_data (method->show_password, method);
+	g_signal_handlers_disconnect_by_func (G_OBJECT (widget),
+	                                      (GCallback) widgets_realized,
+	                                      method);
+	g_signal_handlers_disconnect_by_func (G_OBJECT (widget),
+	                                      (GCallback) widgets_unrealized,
+	                                      method);
 
-	nm_clear_g_source (&method->idle_func_id);
+	widget = GTK_WIDGET (gtk_builder_get_object (parent->builder, "eap_simple_password_entry"));
+	g_assert (widget);
+	g_signal_handlers_disconnect_by_func (G_OBJECT (widget),
+	                                      (GCallback) password_storage_changed,
+	                                      method);
+	if (method->idle_func_id > 0) {
+		g_source_remove (method->idle_func_id);
+		method->idle_func_id = 0;
+	}
+
+	wireless_security_unref (method->ws_parent);
 }
 
 EAPMethodSimple *
@@ -305,7 +315,7 @@
 
 	parent->password_flags_name = NM_SETTING_802_1X_PASSWORD;
 	method = (EAPMethodSimple *) parent;
-	method->ws_parent = ws_parent;
+	method->ws_parent = wireless_security_ref (ws_parent);
 	method->flags = flags;
 	method->type = type;
 	g_assert (type < EAP_METHOD_SIMPLE_TYPE_LAST);
--- a/panels/network/wireless-security/eap-method-simple.h
+++ b/panels/network/wireless-security/eap-method-simple.h
@@ -30,7 +30,6 @@
 	EAP_METHOD_SIMPLE_TYPE_PAP = 0,
 	EAP_METHOD_SIMPLE_TYPE_MSCHAP,
 	EAP_METHOD_SIMPLE_TYPE_MSCHAP_V2,
-	EAP_METHOD_SIMPLE_TYPE_PLAIN_MSCHAP_V2,
 	EAP_METHOD_SIMPLE_TYPE_MD5,
 	EAP_METHOD_SIMPLE_TYPE_PWD,
 	EAP_METHOD_SIMPLE_TYPE_CHAP,
--- a/panels/network/wireless-security/eap-method-simple.ui
+++ b/panels/network/wireless-security/eap-method-simple.ui
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <interface>
-  <requires lib="gtk+" version="3.4"/>
+  <!-- interface-requires gtk+ 3.0 -->
   <object class="GtkNotebook" id="eap_simple_notebook">
     <property name="visible">True</property>
     <property name="can_focus">False</property>
--- a/panels/network/wireless-security/eap-method-tls.c
+++ b/panels/network/wireless-security/eap-method-tls.c
@@ -316,7 +316,7 @@
 		                                 _("Unencrypted private keys are insecure"));
 		gtk_message_dialog_format_secondary_text (GTK_MESSAGE_DIALOG (dialog),
 		                                          "%s",
-		                                          _("The selected private key does not appear to be protected by a password. This could allow your security credentials to be compromised. Please select a password-protected private key.\n\n(You can password-protect your private key with openssl)"));
+		                                          _("The selected private key does not appear to be protected by a password.  This could allow your security credentials to be compromised.  Please select a password-protected private key.\n\n(You can password-protect your private key with openssl)"));
 		gtk_dialog_run (GTK_DIALOG (dialog));
 		gtk_widget_destroy (dialog);
 	}
--- a/panels/network/wireless-security/eap-method-tls.ui
+++ b/panels/network/wireless-security/eap-method-tls.ui
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <interface>
-  <requires lib="gtk+" version="3.4"/>
+  <!-- interface-requires gtk+ 3.0 -->
   <object class="GtkNotebook" id="eap_tls_notebook">
     <property name="visible">True</property>
     <property name="can_focus">False</property>
--- a/panels/network/wireless-security/eap-method-ttls.c
+++ b/panels/network/wireless-security/eap-method-ttls.c
@@ -227,7 +227,6 @@
 	EAPMethodSimple *em_pap;
 	EAPMethodSimple *em_mschap;
 	EAPMethodSimple *em_mschap_v2;
-	EAPMethodSimple *em_plain_mschap_v2;
 	EAPMethodSimple *em_chap;
 	EAPMethodSimple *em_md5;
 	EAPMethodSimple *em_gtc;
@@ -292,26 +291,9 @@
 	eap_method_unref (EAP_METHOD (em_mschap_v2));
 
 	/* Check for defaulting to MSCHAPv2 */
-	if (phase2_auth && !strcasecmp (phase2_auth, "mschapv2") &&
-	    nm_setting_802_1x_get_phase2_autheap (s_8021x) != NULL)
+	if (phase2_auth && !strcasecmp (phase2_auth, "mschapv2"))
 		active = 2;
 
-	em_plain_mschap_v2 = eap_method_simple_new (method->sec_parent,
-	                                            connection,
-	                                            EAP_METHOD_SIMPLE_TYPE_PLAIN_MSCHAP_V2,
-	                                            simple_flags);
-	gtk_list_store_append (auth_model, &iter);
-	gtk_list_store_set (auth_model, &iter,
-	                    I_NAME_COLUMN, _("MSCHAPv2 (no EAP)"),
-	                    I_METHOD_COLUMN, em_plain_mschap_v2,
-	                    -1);
-	eap_method_unref (EAP_METHOD (em_plain_mschap_v2));
-
-	/* Check for defaulting to plain MSCHAPv2 */
-	if (phase2_auth && !strcasecmp (phase2_auth, "mschapv2") &&
-	    nm_setting_802_1x_get_phase2_auth (s_8021x) != NULL)
-		active = 3;
-
 	em_chap = eap_method_simple_new (method->sec_parent,
 	                                 connection,
 	                                 EAP_METHOD_SIMPLE_TYPE_CHAP,
@@ -325,7 +307,7 @@
 
 	/* Check for defaulting to CHAP */
 	if (phase2_auth && !strcasecmp (phase2_auth, "chap"))
-		active = 4;
+		active = 3;
 
 	em_md5 = eap_method_simple_new (method->sec_parent,
 	                                connection,
@@ -340,7 +322,7 @@
 
 	/* Check for defaulting to MD5 */
 	if (phase2_auth && !strcasecmp (phase2_auth, "md5"))
-		active = 5;
+		active = 4;
 
 	em_gtc = eap_method_simple_new (method->sec_parent,
 	                                connection,
@@ -355,7 +337,7 @@
 
 	/* Check for defaulting to GTC */
 	if (phase2_auth && !strcasecmp (phase2_auth, "gtc"))
-		active = 6;
+		active = 5;
 
 	combo = GTK_WIDGET (gtk_builder_get_object (parent->builder, "eap_ttls_inner_auth_combo"));
 	g_assert (combo);
--- a/panels/network/wireless-security/eap-method-ttls.ui
+++ b/panels/network/wireless-security/eap-method-ttls.ui
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <interface>
-  <requires lib="gtk+" version="3.4"/>
+  <!-- interface-requires gtk+ 3.0 -->
   <object class="GtkListStore" id="model6">
     <columns>
       <!-- column-name gchararray -->
@@ -8,7 +8,7 @@
     </columns>
     <data>
       <row>
-        <col id="0"> </col>
+        <col id="0" translatable="yes"> </col>
       </row>
     </data>
   </object>
--- a/panels/network/wireless-security/eap-method.c
+++ b/panels/network/wireless-security/eap-method.c
@@ -34,7 +34,19 @@
 #include "utils.h"
 #include "helpers.h"
 
-G_DEFINE_BOXED_TYPE (EAPMethod, eap_method, eap_method_ref, eap_method_unref)
+GType
+eap_method_get_type (void)
+{
+	static GType type_id = 0;
+
+	if (!type_id) {
+		type_id = g_boxed_type_register_static ("CcEAPMethod",
+							(GBoxedCopyFunc) eap_method_ref,
+							(GBoxedFreeFunc) eap_method_unref);
+	}
+
+	return type_id;
+}
 
 GtkWidget *
 eap_method_get_widget (EAPMethod *method)
@@ -54,7 +66,7 @@
 	g_assert (method->validate);
 	result = (*(method->validate)) (method, error);
 	if (!result && error && !*error)
-		g_set_error_literal (error, NMA_ERROR, NMA_ERROR_GENERIC, _("undefined error in 802.1X security (wpa-eap)"));
+		g_set_error_literal (error, NMA_ERROR, NMA_ERROR_GENERIC, _("undefined error in 802.1x security (wpa-eap)"));
 	return result;
 }
 
@@ -155,7 +167,7 @@
 
 	method->builder = gtk_builder_new ();
 	if (!gtk_builder_add_from_resource (method->builder, ui_resource, &error)) {
-		g_warning ("Couldn't load UI builder resource %s: %s",
+		g_warning ("Couldn't load UI builder file %s: %s",
 		           ui_resource, error->message);
 		eap_method_unref (method);
 		return NULL;
@@ -271,158 +283,28 @@
 }
 
 static gboolean
-file_has_extension (const char *filename, const char *extensions[])
-{
-	char *p, *ext;
-	int i = 0;
-	gboolean found = FALSE;
-
-	p = strrchr (filename, '.');
-	if (!p)
-		return FALSE;
-
-	ext = g_ascii_strdown (p, -1);
-	if (ext) {
-		while (extensions[i]) {
-			if (!strcmp (ext, extensions[i++])) {
-				found = TRUE;
-				break;
-			}
-		}
-	}
-	g_free (ext);
-
-	return found;
-}
-
-#if !LIBNM_BUILD
-static const char *
-find_tag (const char *tag, const char *buf, gsize len)
-{
-	gsize i, taglen;
-
-	taglen = strlen (tag);
-	if (len < taglen)
-		return NULL;
-
-	for (i = 0; i < len - taglen + 1; i++) {
-		if (memcmp (buf + i, tag, taglen) == 0)
-			return buf + i;
-	}
-	return NULL;
-}
-
-static const char *pem_rsa_key_begin = "-----BEGIN RSA PRIVATE KEY-----";
-static const char *pem_dsa_key_begin = "-----BEGIN DSA PRIVATE KEY-----";
-static const char *pem_pkcs8_enc_key_begin = "-----BEGIN ENCRYPTED PRIVATE KEY-----";
-static const char *pem_pkcs8_dec_key_begin = "-----BEGIN PRIVATE KEY-----";
-static const char *pem_cert_begin = "-----BEGIN CERTIFICATE-----";
-static const char *proc_type_tag = "Proc-Type: 4,ENCRYPTED";
-static const char *dek_info_tag = "DEK-Info:";
-
-static gboolean
-pem_file_is_encrypted (const char *buffer, gsize bytes_read)
-{
-	/* Check if the private key is encrypted or not by looking for the
-	 * old OpenSSL-style proc-type and dec-info tags.
-	 */
-	if (find_tag (proc_type_tag, (const char *) buffer, bytes_read)) {
-		if (find_tag (dek_info_tag, (const char *) buffer, bytes_read))
-			return TRUE;
-	}
-	return FALSE;
-}
-
-static gboolean
-file_is_der_or_pem (const char *filename,
-                    gboolean privkey,
-                    gboolean *out_privkey_encrypted)
-{
-	int fd;
-	unsigned char buffer[8192];
-	ssize_t bytes_read;
-	gboolean success = FALSE;
-
-	fd = open (filename, O_RDONLY);
-	if (fd < 0)
-		return FALSE;
-
-	bytes_read = read (fd, buffer, sizeof (buffer) - 1);
-	if (bytes_read < 400)  /* needs to be lower? */
-		goto out;
-	buffer[bytes_read] = '\0';
-
-	/* Check for DER signature */
-	if (bytes_read > 2 && buffer[0] == 0x30 && buffer[1] == 0x82) {
-		success = TRUE;
-		goto out;
-	}
-
-	/* Check for PEM signatures */
-	if (privkey) {
-		if (find_tag (pem_rsa_key_begin, (const char *) buffer, bytes_read)) {
-			success = TRUE;
-			if (out_privkey_encrypted)
-				*out_privkey_encrypted = pem_file_is_encrypted ((const char *) buffer, bytes_read);
-			goto out;
-		}
-
-		if (find_tag (pem_dsa_key_begin, (const char *) buffer, bytes_read)) {
-			success = TRUE;
-			if (out_privkey_encrypted)
-				*out_privkey_encrypted = pem_file_is_encrypted ((const char *) buffer, bytes_read);
-			goto out;
-		}
-
-		if (find_tag (pem_pkcs8_enc_key_begin, (const char *) buffer, bytes_read)) {
-			success = TRUE;
-			if (out_privkey_encrypted)
-				*out_privkey_encrypted = TRUE;
-			goto out;
-		}
-
-		if (find_tag (pem_pkcs8_dec_key_begin, (const char *) buffer, bytes_read)) {
-			success = TRUE;
-			if (out_privkey_encrypted)
-				*out_privkey_encrypted = FALSE;
-			goto out;
-		}
-	} else {
-		if (find_tag (pem_cert_begin, (const char *) buffer, bytes_read)) {
-			success = TRUE;
-			goto out;
-		}
-	}
-
-out:
-	close (fd);
-	return success;
-}
-#endif
-
-static gboolean
 default_filter_privkey (const GtkFileFilterInfo *filter_info, gpointer user_data)
 {
-	const char *extensions[] = { ".der", ".pem", ".p12", ".key", NULL };
+	gboolean require_encrypted = !!user_data;
+	gboolean is_encrypted;
 
 	if (!filter_info->filename)
 		return FALSE;
 
-	if (!file_has_extension (filter_info->filename, extensions))
+	is_encrypted = FALSE;
+	if (!nm_utils_file_is_private_key (filter_info->filename, &is_encrypted))
 		return FALSE;
 
-	return TRUE;
+	return require_encrypted ? is_encrypted : TRUE;
 }
 
 static gboolean
 default_filter_cert (const GtkFileFilterInfo *filter_info, gpointer user_data)
 {
-	const char *extensions[] = { ".der", ".pem", ".crt", ".cer", NULL };
-
 	if (!filter_info->filename)
 		return FALSE;
 
-	if (!file_has_extension (filter_info->filename, extensions))
+	if (!nm_utils_file_is_certificate (filter_info->filename))
 		return FALSE;
 
 	return TRUE;
@@ -448,22 +330,8 @@
 eap_method_is_encrypted_private_key (const char *path)
 {
 	GtkFileFilterInfo info = { .filename = path };
-	gboolean is_encrypted;
-
-	if (!default_filter_privkey (&info, NULL))
-		return FALSE;
 
-#if LIBNM_BUILD
-	is_encrypted = FALSE;
-	if (!nm_utils_file_is_private_key (path, &is_encrypted))
-		return FALSE;
-#else
-	is_encrypted = TRUE;
-	if (   !file_is_der_or_pem (path, TRUE, &is_encrypted)
-	    && !nm_utils_file_is_pkcs12 (path))
-		return FALSE;
-#endif
-	return is_encrypted;
+	return default_filter_privkey (&info, (gpointer) TRUE);
 }
 
 /* Some methods (PEAP, TLS, TTLS) require a CA certificate. The user can choose
--- a/panels/network/wireless-security/eap-method.h
+++ b/panels/network/wireless-security/eap-method.h
@@ -23,6 +23,9 @@
 #ifndef EAP_METHOD_H
 #define EAP_METHOD_H
 
+#include <glib.h>
+#include <gtk/gtk.h>
+
 typedef struct _EAPMethod EAPMethod;
 
 typedef void        (*EMAddToSizeGroupFunc) (EAPMethod *method, GtkSizeGroup *group);
@@ -129,3 +132,4 @@
 void eap_method_ca_cert_ignore_load (NMConnection *connection);
 
 #endif /* EAP_METHOD_H */
+
--- a/panels/network/wireless-security/helpers.h
+++ b/panels/network/wireless-security/helpers.h
@@ -23,6 +23,9 @@
 #ifndef _HELPERS_H_
 #define _HELPERS_H_
 
+#include <glib.h>
+#include <gtk/gtk.h>
+
 typedef const char * (*HelperSecretFunc)(NMSetting *);
 
 void helper_fill_secret_entry (NMConnection *connection,
--- a/panels/network/wireless-security/nm-connection-editor-to-network-panel.patch
+++ b/panels/network/wireless-security/nm-connection-editor-to-network-panel.patch
@@ -1,3 +1,158 @@
+diff --git a/panels/network/wireless-security/eap-method-fast.c b/panels/network/wireless-security/eap-method-fast.c
+index 69b8a86..be5578d 100644
+--- a/panels/network/wireless-security/eap-method-fast.c
++++ b/panels/network/wireless-security/eap-method-fast.c
+@@ -351,7 +351,7 @@ eap_method_fast_new (WirelessSecurity *ws_parent,
+ 	                          fill_connection,
+ 	                          update_secrets,
+ 	                          destroy,
+-	                          UIDIR "/eap-method-fast.ui",
++	                          "/org/cinnamon/control-center/network/eap-method-fast.ui",
+ 	                          "eap_fast_notebook",
+ 	                          "eap_fast_anon_identity_entry",
+ 	                          FALSE);
+diff --git a/panels/network/wireless-security/eap-method-leap.c b/panels/network/wireless-security/eap-method-leap.c
+index 5fbdd86..6163468 100644
+--- a/panels/network/wireless-security/eap-method-leap.c
++++ b/panels/network/wireless-security/eap-method-leap.c
+@@ -204,7 +204,7 @@ eap_method_leap_new (WirelessSecurity *ws_parent,
+ 	                          fill_connection,
+ 	                          update_secrets,
+ 	                          destroy,
+-	                          UIDIR "/eap-method-leap.ui",
++	                          "/org/cinnamon/control-center/network/eap-method-leap.ui",
+ 	                          "eap_leap_notebook",
+ 	                          "eap_leap_username_entry",
+ 	                          FALSE);
+diff --git a/panels/network/wireless-security/eap-method-peap.c b/panels/network/wireless-security/eap-method-peap.c
+index 6462ef2..7f87541 100644
+--- a/panels/network/wireless-security/eap-method-peap.c
++++ b/panels/network/wireless-security/eap-method-peap.c
+@@ -349,7 +349,7 @@ eap_method_peap_new (WirelessSecurity *ws_parent,
+ 	                          fill_connection,
+ 	                          update_secrets,
+ 	                          destroy,
+-	                          UIDIR "/eap-method-peap.ui",
++	                          "/org/cinnamon/control-center/network/eap-method-peap.ui",
+ 	                          "eap_peap_notebook",
+ 	                          "eap_peap_anon_identity_entry",
+ 	                          FALSE);
+diff --git a/panels/network/wireless-security/eap-method-simple.c b/panels/network/wireless-security/eap-method-simple.c
+index 0f72029..f9fd473 100644
+--- a/panels/network/wireless-security/eap-method-simple.c
++++ b/panels/network/wireless-security/eap-method-simple.c
+@@ -307,7 +307,7 @@ eap_method_simple_new (WirelessSecurity *ws_parent,
+ 	                          fill_connection,
+ 	                          update_secrets,
+ 	                          destroy,
+-	                          UIDIR "/eap-method-simple.ui",
++	                          "/org/cinnamon/control-center/network/eap-method-simple.ui",
+ 	                          "eap_simple_notebook",
+ 	                          "eap_simple_username_entry",
+ 	                          flags & EAP_METHOD_SIMPLE_FLAG_PHASE2);
+diff --git a/panels/network/wireless-security/eap-method-tls.c b/panels/network/wireless-security/eap-method-tls.c
+index 8f33d83..587c399 100644
+--- a/panels/network/wireless-security/eap-method-tls.c
++++ b/panels/network/wireless-security/eap-method-tls.c
+@@ -453,7 +453,7 @@ eap_method_tls_new (WirelessSecurity *ws_parent,
+ 	                          fill_connection,
+ 	                          update_secrets,
+ 	                          NULL,
+-	                          UIDIR "/eap-method-tls.ui",
++	                          "/org/cinnamon/control-center/network/eap-method-tls.ui",
+ 	                          "eap_tls_notebook",
+ 	                          "eap_tls_identity_entry",
+ 	                          phase2);
+diff --git a/panels/network/wireless-security/eap-method-ttls.c b/panels/network/wireless-security/eap-method-ttls.c
+index 789f0fa..ef02529 100644
+--- a/panels/network/wireless-security/eap-method-ttls.c
++++ b/panels/network/wireless-security/eap-method-ttls.c
+@@ -380,7 +380,7 @@ eap_method_ttls_new (WirelessSecurity *ws_parent,
+ 	                          fill_connection,
+ 	                          update_secrets,
+ 	                          destroy,
+-	                          UIDIR "/eap-method-ttls.ui",
++	                          "/org/cinnamon/control-center/network/eap-method-ttls.ui",
+ 	                          "eap_ttls_notebook",
+ 	                          "eap_ttls_anon_identity_entry",
+ 	                          FALSE);
+diff --git a/panels/network/wireless-security/eap-method.c b/panels/network/wireless-security/eap-method.c
+index 90efea1..6ec4849 100644
+--- a/panels/network/wireless-security/eap-method.c
++++ b/panels/network/wireless-security/eap-method.c
+@@ -34,7 +34,19 @@
+ #include "utils.h"
+ #include "helpers.h"
+ 
+-G_DEFINE_BOXED_TYPE (EAPMethod, eap_method, eap_method_ref, eap_method_unref)
++GType
++eap_method_get_type (void)
++{
++	static GType type_id = 0;
++
++	if (!type_id) {
++		type_id = g_boxed_type_register_static ("CcEAPMethod",
++							(GBoxedCopyFunc) eap_method_ref,
++							(GBoxedFreeFunc) eap_method_unref);
++	}
++
++	return type_id;
++}
+ 
+ GtkWidget *
+ eap_method_get_widget (EAPMethod *method)
+@@ -129,7 +141,7 @@ eap_method_init (gsize obj_size,
+                  EMFillConnectionFunc fill_connection,
+                  EMUpdateSecretsFunc update_secrets,
+                  EMDestroyFunc destroy,
+-                 const char *ui_file,
++                 const char *ui_resource,
+                  const char *ui_widget_name,
+                  const char *default_field,
+                  gboolean phase2)
+@@ -138,7 +150,7 @@ eap_method_init (gsize obj_size,
+ 	GError *error = NULL;
+ 
+ 	g_return_val_if_fail (obj_size > 0, NULL);
+-	g_return_val_if_fail (ui_file != NULL, NULL);
++	g_return_val_if_fail (ui_resource != NULL, NULL);
+ 	g_return_val_if_fail (ui_widget_name != NULL, NULL);
+ 
+ 	method = g_slice_alloc0 (obj_size);
+@@ -154,9 +166,9 @@ eap_method_init (gsize obj_size,
+ 	method->phase2 = phase2;
+ 
+ 	method->builder = gtk_builder_new ();
+-	if (!gtk_builder_add_from_file (method->builder, ui_file, &error)) {
++	if (!gtk_builder_add_from_resource (method->builder, ui_resource, &error)) {
+ 		g_warning ("Couldn't load UI builder file %s: %s",
+-		           ui_file, error->message);
++		           ui_resource, error->message);
+ 		eap_method_unref (method);
+ 		return NULL;
+ 	}
+@@ -164,7 +176,7 @@ eap_method_init (gsize obj_size,
+ 	method->ui_widget = GTK_WIDGET (gtk_builder_get_object (method->builder, ui_widget_name));
+ 	if (!method->ui_widget) {
+ 		g_warning ("Couldn't load UI widget '%s' from UI file %s",
+-		           ui_widget_name, ui_file);
++		           ui_widget_name, ui_resource);
+ 		eap_method_unref (method);
+ 		return NULL;
+ 	}
+diff --git a/panels/network/wireless-security/eap-method.h b/panels/network/wireless-security/eap-method.h
+index 84c1c78..de287e3 100644
+--- a/panels/network/wireless-security/eap-method.h
++++ b/panels/network/wireless-security/eap-method.h
+@@ -99,7 +99,7 @@ EAPMethod *eap_method_init (gsize obj_size,
+                             EMFillConnectionFunc fill_connection,
+                             EMUpdateSecretsFunc update_secrets,
+                             EMDestroyFunc destroy,
+-                            const char *ui_file,
++                            const char *ui_resource,
+                             const char *ui_widget_name,
+                             const char *default_field,
+                             gboolean phase2);
 diff --git a/panels/network/wireless-security/wireless-security.c b/panels/network/wireless-security/wireless-security.c
 index 23b8a27..bd233b0 100644
 --- a/panels/network/wireless-security/wireless-security.c
@@ -19,7 +174,7 @@
 +	if (!type_id) {
 +		g_resources_register (wireless_security_get_resource ());
 +
-+		type_id = g_boxed_type_register_static ("WirelessSecurity",
++		type_id = g_boxed_type_register_static ("CcWirelessSecurity",
 +							(GBoxedCopyFunc) wireless_security_ref,
 +							(GBoxedFreeFunc) wireless_security_unref);
 +	}
@@ -29,16 +184,129 @@
  
  GtkWidget *
  wireless_security_get_widget (WirelessSecurity *sec)
+@@ -146,7 +161,7 @@ wireless_security_init (gsize obj_size,
+                         WSFillConnectionFunc fill_connection,
+                         WSUpdateSecretsFunc update_secrets,
+                         WSDestroyFunc destroy,
+-                        const char *ui_file,
++                        const char *ui_resource,
+                         const char *ui_widget_name,
+                         const char *default_field)
+ {
+@@ -154,7 +169,7 @@ wireless_security_init (gsize obj_size,
+ 	GError *error = NULL;
+ 
+ 	g_return_val_if_fail (obj_size > 0, NULL);
+-	g_return_val_if_fail (ui_file != NULL, NULL);
++	g_return_val_if_fail (ui_resource != NULL, NULL);
+ 	g_return_val_if_fail (ui_widget_name != NULL, NULL);
+ 
+ 	sec = g_slice_alloc0 (obj_size);
+@@ -170,9 +185,9 @@ wireless_security_init (gsize obj_size,
+ 	sec->default_field = default_field;
+ 
+ 	sec->builder = gtk_builder_new ();
+-	if (!gtk_builder_add_from_file (sec->builder, ui_file, &error)) {
++	if (!gtk_builder_add_from_resource (sec->builder, ui_resource, &error)) {
+ 		g_warning ("Couldn't load UI builder file %s: %s",
+-		           ui_file, error->message);
++		           ui_resource, error->message);
+ 		g_error_free (error);
+ 		wireless_security_unref (sec);
+ 		return NULL;
+@@ -181,7 +196,7 @@ wireless_security_init (gsize obj_size,
+ 	sec->ui_widget = GTK_WIDGET (gtk_builder_get_object (sec->builder, ui_widget_name));
+ 	if (!sec->ui_widget) {
+ 		g_warning ("Couldn't load UI widget '%s' from UI file %s",
+-		           ui_widget_name, ui_file);
++		           ui_widget_name, ui_resource);
+ 		wireless_security_unref (sec);
+ 		return NULL;
+ 	}
 diff --git a/panels/network/wireless-security/wireless-security.h b/panels/network/wireless-security/wireless-security.h
-index cb6553be5..4de618e16 100644
+index e9bcf63..3d56fa3 100644
 --- a/panels/network/wireless-security/wireless-security.h
 +++ b/panels/network/wireless-security/wireless-security.h
 @@ -23,6 +23,8 @@
  #ifndef WIRELESS_SECURITY_H
  #define WIRELESS_SECURITY_H
  
-+#include <gtk/gtk.h>
++#define LIBNM_GLIB_BUILD
 +
- typedef struct _WirelessSecurity WirelessSecurity;
+ #include <glib.h>
+ #include <gtk/gtk.h>
+ 
+@@ -118,7 +120,7 @@ WirelessSecurity *wireless_security_init (gsize obj_size,
+                                           WSFillConnectionFunc fill_connection,
+                                           WSUpdateSecretsFunc update_secrets,
+                                           WSDestroyFunc destroy,
+-                                          const char *ui_file,
++                                          const char *ui_resource,
+                                           const char *ui_widget_name,
+                                           const char *default_field);
  
- typedef void (*WSChangedFunc) (WirelessSecurity *sec, gpointer user_data);
+diff --git a/panels/network/wireless-security/ws-dynamic-wep.c b/panels/network/wireless-security/ws-dynamic-wep.c
+index db55119..0192d24 100644
+--- a/panels/network/wireless-security/ws-dynamic-wep.c
++++ b/panels/network/wireless-security/ws-dynamic-wep.c
+@@ -109,7 +109,7 @@ ws_dynamic_wep_new (NMConnection *connection,
+ 	                                 fill_connection,
+ 	                                 update_secrets,
+ 	                                 destroy,
+-	                                 UIDIR "/ws-dynamic-wep.ui",
++	                                 "/org/cinnamon/control-center/network/ws-dynamic-wep.ui",
+ 	                                 "dynamic_wep_notebook",
+ 	                                 NULL);
+ 	if (!parent)
+diff --git a/panels/network/wireless-security/ws-leap.c b/panels/network/wireless-security/ws-leap.c
+index 2b8b615..3a0f60c 100644
+--- a/panels/network/wireless-security/ws-leap.c
++++ b/panels/network/wireless-security/ws-leap.c
+@@ -155,7 +155,7 @@ ws_leap_new (NMConnection *connection, gboolean secrets_only)
+ 	                                 fill_connection,
+ 	                                 update_secrets,
+ 	                                 NULL,
+-	                                 UIDIR "/ws-leap.ui",
++	                                 "/org/cinnamon/control-center/network/ws-leap.ui",
+ 	                                 "leap_notebook",
+ 	                                 "leap_username_entry");
+ 	if (!parent)
+diff --git a/panels/network/wireless-security/ws-wep-key.c b/panels/network/wireless-security/ws-wep-key.c
+index 045ac4b..cd7dbac 100644
+--- a/panels/network/wireless-security/ws-wep-key.c
++++ b/panels/network/wireless-security/ws-wep-key.c
+@@ -264,7 +264,7 @@ ws_wep_key_new (NMConnection *connection,
+ 	                                 fill_connection,
+ 	                                 update_secrets,
+ 	                                 destroy,
+-	                                 UIDIR "/ws-wep-key.ui",
++	                                 "/org/cinnamon/control-center/network/ws-wep-key.ui",
+ 	                                 "wep_key_notebook",
+ 	                                 "wep_key_entry");
+ 	if (!parent)
+diff --git a/panels/network/wireless-security/ws-wpa-eap.c b/panels/network/wireless-security/ws-wpa-eap.c
+index d83218d..7db42df 100644
+--- a/panels/network/wireless-security/ws-wpa-eap.c
++++ b/panels/network/wireless-security/ws-wpa-eap.c
+@@ -110,7 +110,7 @@ ws_wpa_eap_new (NMConnection *connection,
+ 	                                 fill_connection,
+ 	                                 update_secrets,
+ 	                                 destroy,
+-	                                 UIDIR "/ws-wpa-eap.ui",
++	                                 "/org/cinnamon/control-center/network/ws-wpa-eap.ui",
+ 	                                 "wpa_eap_notebook",
+ 	                                 NULL);
+ 	if (!parent)
+diff --git a/panels/network/wireless-security/ws-wpa-psk.c b/panels/network/wireless-security/ws-wpa-psk.c
+index e56f348..4be28f2 100644
+--- a/panels/network/wireless-security/ws-wpa-psk.c
++++ b/panels/network/wireless-security/ws-wpa-psk.c
+@@ -182,7 +182,7 @@ ws_wpa_psk_new (NMConnection *connection, gboolean secrets_only)
+ 	                                 fill_connection,
+ 	                                 update_secrets,
+ 	                                 NULL,
+-	                                 UIDIR "/ws-wpa-psk.ui",
++	                                 "/org/cinnamon/control-center/network/ws-wpa-psk.ui",
+ 	                                 "wpa_psk_notebook",
+ 	                                 "wpa_psk_entry");
+ 	if (!parent)
--- a/panels/network/wireless-security/wireless-security.c
+++ b/panels/network/wireless-security/wireless-security.c
@@ -37,7 +37,7 @@
 	if (!type_id) {
 		g_resources_register (wireless_security_get_resource ());
 
-		type_id = g_boxed_type_register_static ("WirelessSecurity",
+		type_id = g_boxed_type_register_static ("CcWirelessSecurity",
 							(GBoxedCopyFunc) wireless_security_ref,
 							(GBoxedFreeFunc) wireless_security_unref);
 	}
@@ -84,7 +84,7 @@
 	g_assert (sec->validate);
 	result = (*(sec->validate)) (sec, error);
 	if (!result && error && !*error)
-		g_set_error_literal (error, NMA_ERROR, NMA_ERROR_GENERIC, _("Unknown error validating 802.1X security"));
+		g_set_error_literal (error, NMA_ERROR, NMA_ERROR_GENERIC, _("Unknown error validating 802.1x security"));
 	return result;
 }
 
@@ -186,7 +186,7 @@
 
 	sec->builder = gtk_builder_new ();
 	if (!gtk_builder_add_from_resource (sec->builder, ui_resource, &error)) {
-		g_warning ("Couldn't load UI builder resource %s: %s",
+		g_warning ("Couldn't load UI builder file %s: %s",
 		           ui_resource, error->message);
 		g_error_free (error);
 		wireless_security_unref (sec);
--- a/panels/network/wireless-security/wireless-security.h
+++ b/panels/network/wireless-security/wireless-security.h
@@ -23,6 +23,7 @@
 #ifndef WIRELESS_SECURITY_H
 #define WIRELESS_SECURITY_H
 
+#include <glib.h>
 #include <gtk/gtk.h>
 
 typedef struct _WirelessSecurity WirelessSecurity;
--- a/panels/network/wireless-security/nm-default.h
+++ b/panels/network/wireless-security/nm-default.h
@@ -22,9 +22,6 @@
 #ifndef __NM_DEFAULT_H__
 #define __NM_DEFAULT_H__
 
-#define LIBNM_GLIB_BUILD
-#define NETWORKMANAGER_COMPILATION
-
 /*****************************************************************************/
 
 /* always include these headers for our internal source files. */
@@ -38,24 +35,10 @@
 
 #include <gtk/gtk.h>
 
-#include <libnm/nm-connection.h>
-#include <libnm/nm-setting-wireless-security.h>
-#include <libnm/nm-setting-8021x.h>
-
-static inline gboolean
-nm_clear_g_source (guint *id)
-{
-	if (id && *id) {
-		g_source_remove (*id);
-		*id = 0;
-		return TRUE;
-	}
-	return FALSE;
-}
-
 /*****************************************************************************/
 
 #include <glib/gi18n.h>
+#include <NetworkManager.h>
 
 /*****************************************************************************/
 
--- a/panels/network/wireless-security/ws-dynamic-wep.ui
+++ b/panels/network/wireless-security/ws-dynamic-wep.ui
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <interface>
-  <requires lib="gtk+" version="3.4"/>
+  <!-- interface-requires gtk+ 3.0 -->
   <object class="GtkListStore" id="model7">
     <columns>
       <!-- column-name gchararray -->
@@ -8,7 +8,7 @@
     </columns>
     <data>
       <row>
-        <col id="0"> </col>
+        <col id="0" translatable="yes"> </col>
       </row>
     </data>
   </object>
--- a/panels/network/wireless-security/ws-leap.ui
+++ b/panels/network/wireless-security/ws-leap.ui
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <interface>
-  <requires lib="gtk+" version="3.4"/>
+  <!-- interface-requires gtk+ 3.0 -->
   <object class="GtkNotebook" id="leap_notebook">
     <property name="visible">True</property>
     <property name="can_focus">False</property>
--- a/panels/network/wireless-security/ws-wep-key.ui
+++ b/panels/network/wireless-security/ws-wep-key.ui
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <interface>
-  <requires lib="gtk+" version="3.4"/>
+  <!-- interface-requires gtk+ 3.0 -->
   <object class="GtkListStore" id="model4">
     <columns>
       <!-- column-name gchararray -->
@@ -11,13 +11,13 @@
         <col id="0" translatable="yes">1 (Default)</col>
       </row>
       <row>
-        <col id="0">2</col>
+        <col id="0" translatable="yes">2</col>
       </row>
       <row>
-        <col id="0">3</col>
+        <col id="0" translatable="yes">3</col>
       </row>
       <row>
-        <col id="0">4</col>
+        <col id="0" translatable="yes">4</col>
       </row>
     </data>
   </object>
--- a/panels/network/wireless-security/ws-wpa-eap.ui
+++ b/panels/network/wireless-security/ws-wpa-eap.ui
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <interface>
-  <requires lib="gtk+" version="3.4"/>
+  <!-- interface-requires gtk+ 3.0 -->
   <object class="GtkListStore" id="model5">
     <columns>
       <!-- column-name gchararray -->
@@ -8,7 +8,7 @@
     </columns>
     <data>
       <row>
-        <col id="0"> </col>
+        <col id="0" translatable="yes"> </col>
       </row>
     </data>
   </object>
--- a/panels/network/wireless-security/ws-wpa-psk.ui
+++ b/panels/network/wireless-security/ws-wpa-psk.ui
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <interface>
-  <requires lib="gtk+" version="3.4"/>
+  <!-- interface-requires gtk+ 3.0 -->
   <object class="GtkNotebook" id="wpa_psk_notebook">
     <property name="visible">True</property>
     <property name="can_focus">False</property>
